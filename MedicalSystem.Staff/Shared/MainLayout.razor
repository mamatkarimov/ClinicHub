@inherits LayoutComponentBase
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

<PageTitle>Medical System Staff</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-bar">
            <AuthorizeView>
                <Authorized>
                    <span class="username">Welcome!, @username!</span>
                    @if (username is null)
                    {
                        <p>Loading...</p>
                    }
                    else
                    {
                        <p>Welcome, @username!</p>
                    }
                    <button class="btn btn-link logout-btn" @onclick="Logout">Logout</button>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="btn btn-link" href="/login">Login</NavLink>
                </NotAuthorized>
            </AuthorizeView>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {

    private string? username;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity is not null && user.Identity.IsAuthenticated)
        {
            // Try different claim types for username
            username = user.FindFirst(c =>
                c.Type == "unique_name" ||
                c.Type == "name" ||
                c.Type == "preferred_username")?.Value;

            if (username == null)
            {
                // fallback to Identity.Name
                username = user.Identity.Name;
            }
        }
    }

    private void Logout()
    {
        Navigation.NavigateTo("/logout", forceLoad: true);
    }
}
